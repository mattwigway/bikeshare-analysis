<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd">

  <context:annotation-config />
  
  <bean class="org.opentripplanner.analyst.request.SampleFactory">
    <property name="searchRadiusM" value="200" />
  </bean>
  <bean class="org.opentripplanner.routing.impl.DefaultRemainingWeightHeuristicFactoryImpl"/>
  <bean class="org.opentripplanner.routing.algorithm.GenericAStar"/>
  <!-- bean class="org.opentripplanner.analyst.batch.IndividualFactory" /> -->
  <bean class="org.opentripplanner.analyst.core.GeometryIndex" />
  
  <!-- specify a GraphService, configuring the path to the serialized Graphs -->
  <bean id="graphService" class="org.opentripplanner.routing.impl.GraphServiceImpl">
    <property name="path" value="/home/matthewc/bikeshare-analysis/transitdata/${city}/" />
    <property name="defaultRouterId" value="" />
  </bean>

  <!-- this loads a population from a comma-separated flat text file -->
  <bean id="origins" class="org.opentripplanner.analyst.batch.CSVPopulation">
    <property name="sourceFilename" value="/home/matthewc/bikeshare-analysis/data/${city}/pop.csv" />
    <property name="labelCol" value="1" />
    <property name="inputCol" value="4" />
    <property name="yCol" value="9" />
    <property name="xCol" value="8" />
    <property name="crs" value="${proj}" /> <!-- WGS 84 UTM 18N -->
    <property name="skipHeaders" value="true" />
  </bean>

  <!-- this creates a population arranged on a regular grid that can later be saved as an image -->
  <bean id="destinations" class="org.opentripplanner.analyst.batch.ShapefilePopulation">
    <property name="sourceFilename" value="/home/matthewc/bikeshare-analysis/censusdata/${city}/${city}_housing_employment_points.shp" />
    <property name="labelAttribute" value="BLOCKID10" />
    <property name="inputAttribute" value="POP10" />  <!-- population -->
    <!-- <property name="inputAttribute" value="jobs_C000" /> --> <!-- jobs -->
  </bean>
  
  
  <bean id="prototypeRoutingRequest" class="org.opentripplanner.routing.core.RoutingRequest">
    <!-- Set default routing parameters here -->
    <property name="maxWalkDistance" value="1000000" />
    <property name="arriveBy" value="false" />
    <property name="modes" value="WALK" />
  </bean>

  <!-- define the main batch processor, which will build one shortest path tree from each origin to all destinations -->
  <bean id="batchProcessor" class="org.opentripplanner.analyst.batch.BatchProcessor"> 
    <property name="outputPath" value="/home/matthewc/bikeshare-analysis/accessibility/${city}/walk_10min_housing.csv" />

    <property name="date" value="2014-01-30" />
    <property name="time" value="08:00 AM" />
    <property name="timeZone" value="${timezone}" />
    <property name="nThreads" value="2" />
    <property name="searchCutoffSeconds" value="600" />
        <property name="aggregator"> 
          <bean class="org.opentripplanner.analyst.batch.aggregator.ThresholdSumAggregator">
            <property name="threshold" value="600" /> <!-- ten mins in seconds -->
          </bean>
        </property> 
  </bean>
</beans>